Please recreate all standard tabs under the Client Profile view at:

📁 `src/app/support-work/client-profile/[id]/tabs/`

Each tab must reuse live, filtered data from its respective module and apply both `clientId` and `companyId` filters. All placeholder/dummy data should be removed.

---

## ✅ Tabs to Create:

---

### 1️⃣ Overview Tab (`overview.tsx`)

Display client data as captured from the **New Client Form**, including:
- Full Name
- NDIS Number
- Date of Birth
- Address
- Emergency Contact
- Allergies or alerts (if present)

Fetch using:
```ts
getClientById(clientId, companyId)
2️⃣ Case Notes Tab
Pull from caseNotes module

Filter by clientId and companyId

Use CaseNoteCard.tsx

Show tags (e.g. incident, medication)

3️⃣ Incidents Tab
Fetch incidents from incidentReports

Filter by clientId and companyId

Reuse: IncidentCard.tsx

Show: date, type, status, severity

4️⃣ Observations Tab
Fetch from hourlyObservations

Filter by clientId and companyId

Show: type, subtype, intensity, timestamp

Use reusable card/list components

5️⃣ Medications Tab
Pull data from:

medicationPlans

medicationRecords

Filter by clientId and companyId

Show:

Active plans (card view)

Recent administration records

Optional compliance tracker

6️⃣ 🗓️ Schedules Tab (Calendar View Only)
This tab must render a full calendar view showing all shifts assigned to the client.

✅ Required:

Use a proper calendar UI (e.g. react-big-calendar)

Show shift time blocks with:

Staff name

Shift type (AM, PM, Active Night)

Status badge (assigned, in progress, completed)

✅ Data source:

Fetch from shifts module

Filter:

ts
Copy
Edit
shift.clientId === clientId && shift.companyId === companyId
❗ Do NOT use a list or card format — this must be a visual calendar to align with shift planning and review use cases.

🔐 Permissions:
Use hasPermission(user, module, action) across all tabs

Enforce tenant isolation (companyId)

Only show content user has access to

🔧 Implementation Notes:
Remove all placeholder tabs and dummy data

Use TanStack Query for all fetches

Use existing UI components from each module

Include loading and empty states per tab

Do not include any edit forms in the client profile — this is view-only